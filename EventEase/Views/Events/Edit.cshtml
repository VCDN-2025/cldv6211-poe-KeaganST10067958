@model EventEase.Models.Event

@{
    ViewData["Title"] = "Edit Event";
}

<h1>Edit Event</h1>

<form asp-action="Edit" enctype="multipart/form-data">
    <input type="hidden" asp-for="EventId" />

    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="EventTypeId" class="control-label">Event Type</label>
        <select asp-for="EventTypeId" class="form-control" asp-items="ViewBag.EventTypeId"></select>
        <span asp-validation-for="EventTypeId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label>Current Image</label><br />
        @if (!string.IsNullOrEmpty(Model.ImageUrl))
        {
            <img src="@Model.ImageUrl" alt="Event Image" width="150" height="100" class="mb-2" />
        }
    </div>

    <div class="form-group">
        <label>Upload New Image</label>
        <input type="file" name="imageFile" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary mt-2">Save</button>
    <a asp-action="Index" class="btn btn-secondary mt-2">Cancel</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
